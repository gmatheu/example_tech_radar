"Tools":
  "Adopt":
    Postgres:
      purpose: "Primary Data Store"
      why_summary: "ACID-compliant, highly flexible, scalable and performant.  Advanced features for data modeling and querying"
    Resque:
      purpose: "Background Jobs"
      more_details_url: https://github.com/resque/resque/tree/1-x-stable
  "Trial":
    ElasticSearch:
      purpose: "Indexed Search"
      more_details_summary: "ElasticSearch is a database designed for high performance searching of potentially complex data."
      why_summary: "Used by platform team with great success."
    Bootstrap:
      purpose: "CSS Framework"
      more_details_url: http://getbootstrap.com
      why_summary: "Used in several apps"
    ERB:
      purpose: "Front-end templates"
      more_details_url: http://guides.rubyonrails.org/layouts_and_rendering.html
      why_summary: "The new accounting app isn't using ERB, but all the rest are."
    Lodash:
      purpose: "Javascript utility library"
      more_details_url:
      why_summary: "Used by all apps but the legacy image server."
  "Assess":
    Sidekiq:
      purpose: "Background Jobs"
      more_details_url:
      why_summary: "Only mobile is using."
    Pact:
      purpose: "HTTP Service Testing"
      more_details_url: https://github.com/realestate-com-au/pact
      more_details_summary: "Pact is a system for implementing consumer-driven contracts, which allows us to get good test coverage of microservices without doing end-to-end integration tests.  It works by consuming code publishing JSON files to a shared repository that the consumed service can then execute against itself to ensure compatibility with the consumer."
      why_summary: "Ops using for microservices testing"
    Confluence:
      purpose: "Documentation"
      more_details_url: https://www.atlassian.com/software/confluence/
      why_summary: "UX are the only team using this."
    BassCSS:
      purpose: "CSS Framework"
      why_summary: "Only used on the admin app."
      more_details_url: http://www.basscss.com/
  "Hold":
    JIRA:
      purpose: "Issue & Task Management"
      more_details_url: https://www.atlassian.com/software/jira/
      why_summary: "Abandoned for lighterweight solutions"
    Google Hangouts:
      purpose: "Video Chat"
      more_details_url: https://hangouts.google.com/
      why_summary: "Abandoned for BlueJeans"
"Platforms":
  "Adopt":
    Heroku:
      purpose: "Infrastructure"
      more_details_url:
    S3:
      purpose: "Remote file system"
      more_details_url: https://aws.amazon.com/s3/
  "Trial":
    iOS:
      purpose: "Mobile Application Development"
      more_details_url: https://en.wikipedia.org/wiki/IOS
      why_summary: "Only used for client-facing mobile app"
  "Assess":
    AWS:
      purpose: "Infrastructure"
      more_details_url: https://aws.amazon.com
      why_summary: "Hosts the VPN"
  "Hold":
"Techniques":
  "Adopt":
    "Weekly sync-ups with Business Partners":
      purpose: "Roadmap Planning"
      more_details_summary: "We meet each week with the business stakeholders to discuss strategy, priorities, and roadmaps"
    "Continuous Deployment":
      purpose: "Ship Code"
    "Pull Requests":
      purpose: "Code Review & Change Management"
      more_details_url: http://multithreaded.stitchfix.com/blog/2013/07/30/our-git-workflow/
  "Trial":
    "HTTP Services":
      purpose: "Application Integration"
      why_summary: "Probably ready to adopt.  Some older code still using gems & messages-as-APIs"
    "Asynchronous API Design":
      purpose: "Scaling"
      why_summary: "payments and shipping apps using heavily"
  "Assess":
    "Consumer-driven tests for services":
      purpose: "Ensure changes to services do not break upstream clients"
      more_details_url: http://martinfowler.com/articles/consumerDrivenContracts.html
      why_summary: "Ops experimenting (see Pact)"
    "End-to-end integrated tests in CI":
      purpose: "Ensure changes to services do not break upstream clients"
      why_summary: "Mobile using for microservices testing"
  "Hold":
    "Shared Gems":
      purpose: "Application Integration"
      why_summary: "Difficult to manage, doesn't scale"
    "RabbitMQ for RPC":
      purpose: "Application Integration"
      why_summary: "Increases coupling in subtle ways, and is not fault-tolerant"
    "Shared database":
      purpose: "Application Integration"
      why_summary: "Not scaling"
"Languages and Frameworks":
  "Adopt":
    Ruby:
      purpose: Middleware Programming
      more_details_url: https://www.ruby-lang.org/en/
    Rails:
      purpose: Middleware Framework
      more_details_url: http://rubyonrails.org/
  "Trial":
    CoffeeScript:
      purpose: Browser Programming
      more_details_url:
      why_summary: "Most apps are using this, with Admin being a notable exception"
    JavaScript:
      purpose: Browser Programming
      more_details_url:
      why_summary: "Admin front-end uses JavaScript"
    Swift:
      purpose: iOS Development
      more_details_url: https://developer.apple.com/swift/
      why_summary: "Likely Adopt, but only one use-case currently"
  "Assess":
    Go:
      more_details_url: https://golang.org/
      purpose: "Middleware Programming"
      why_summary: "Currently experimenting"
  "Hold":
    "Objective-C":
      purpose: "iOS Development"
      more_details_url: https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html
      why_summary: "We have seen much lower error rates in production using Swift than the devs have seen with similar apps written in Objective-C"
